// Generated by Dagger (https://dagger.dev).
package com.iitp.signagekiosk.di;

import android.content.Context;
import com.iitp.saltlux_talkbot.TalkBot;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class TalkBotModule_ProvideTalkBotFactory implements Factory<TalkBot> {
  private final Provider<Context> applicationContextProvider;

  public TalkBotModule_ProvideTalkBotFactory(Provider<Context> applicationContextProvider) {
    this.applicationContextProvider = applicationContextProvider;
  }

  @Override
  public TalkBot get() {
    return provideTalkBot(applicationContextProvider.get());
  }

  public static TalkBotModule_ProvideTalkBotFactory create(
      Provider<Context> applicationContextProvider) {
    return new TalkBotModule_ProvideTalkBotFactory(applicationContextProvider);
  }

  public static TalkBot provideTalkBot(Context applicationContext) {
    return Preconditions.checkNotNullFromProvides(TalkBotModule.INSTANCE.provideTalkBot(applicationContext));
  }
}
